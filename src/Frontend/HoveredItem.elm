module Frontend.HoveredItem exposing (HoveredItem(..), text)

import Data.FightStrategy.Help as FightStrategyHelp
import Data.Perk as Perk exposing (Perk)
import Data.Perk.Requirement as PerkRequirement
import Data.Quest as Quest
import Data.Skill as Skill exposing (Skill)
import Data.Special as Special
import Data.Special.Perception as Perception exposing (PerceptionLevel)
import Data.Trait as Trait exposing (Trait)


type HoveredItem
    = HoveredPerk Perk
    | HoveredTrait Trait
    | HoveredSpecial Special.Type
    | HoveredSkill Skill
    | HoveredFightStrategyReference FightStrategyHelp.Reference
    | HoveredPerceptionLevel PerceptionLevel
    | HoveredSequence
    | HoveredMaxHP
    | HoveredActionPoints
    | HoveredArmorClass
    | HoveredCriticalChance
    | HoveredDamageThreshold
    | HoveredDamageResistance
    | HoveredHealOverTime
    | HoveredHealUsingTick


text : HoveredItem -> { title : String, description : String }
text hoveredItem =
    case hoveredItem of
        HoveredPerk perk ->
            { title = Perk.name perk
            , description =
                [ Perk.description perk
                , "Max rank: " ++ String.fromInt (Perk.maxRank perk)
                , "Requirements:"
                , PerkRequirement.requirements perk
                    |> List.map (\req -> "- " ++ requirementText req)
                    |> String.join "\n"
                ]
                    |> String.join "\n\n"
            }

        HoveredTrait trait ->
            { title = Trait.name trait
            , description = Trait.description trait
            }

        HoveredSpecial specialType ->
            { title = Special.label specialType
            , description = Special.description specialType
            }

        HoveredSkill skill ->
            { title = Skill.name skill
            , description =
                Skill.description skill
                    ++ (if Skill.isUseful skill then
                            ""

                        else
                            "\n\nThis skill is not useful in the game yet."
                       )
            }

        HoveredFightStrategyReference reference ->
            { title = FightStrategyHelp.referenceTitle reference
            , description = FightStrategyHelp.referenceDescription reference
            }

        HoveredPerceptionLevel perceptionLevel ->
            { title = "Perception Level: " ++ Perception.label perceptionLevel
            , description = Perception.hoveredItemDescription perceptionLevel
            }

        HoveredSequence ->
            { title = "Sequence"
            , description = """Determines how soon in a combat turn your character can react.

When combat starts, the initiator gets a free surprise attack. If the target
survives, they get to react.

Then, in subsequent rounds, combatants take turns in Sequence order (higher
Sequence acts first), with everyone getting one turn per round.

Influenced by:

- **Perception**
- the **Kamikaze** trait
- the **Earlier Sequence** perk
"""
            }

        HoveredMaxHP ->
            { title = "Max HP"
            , description = """Hitpoints measure the health of your character. In fights, when your HP reaches 0, you die.

HP can be regenerated by using ticks, by resting (each game tick heals you a
small amount) and by consuming certain consumables.

Influenced by:

- your **level**
- **Strength**
- **Endurance**
- the **Lifegiver** perk
"""
            }

        HoveredActionPoints ->
            { title = "Action Points"
            , description = """AP determines the number of actions that your character can take during one combat turn.

Action Points are spent attacking, moving on the battlefield, healing and standing up after getting knocked down.

Influenced by:

- **Agility**
- the **Bruiser** trait
- the **Action Boy** perk

The AP cost of certain actions is influenced by:

- the **weapon** used
- **attack type** (aimed, unaimed, burst shot)
- the **Bonus Hand-to-hand Attacks** perk
- the **Bonus Rate of Fire** perk
"""
            }

        HoveredArmorClass ->
            { title = "Armor Class"
            , description = """Armor Class (AC) represents how good your character is at avoiding being hit in combat.

Modifies the chance to hit your character: the higher your AC, the more likely enemies are to miss their attacks against you.

Your natural AC is influenced by:

- **Agility**
- the **Kamikaze** trait
- the **Dodger** perk

During combat the AC is also influenced by:

- your **armor**
- the **Hand-to-hand Evade** perk
- leftover **Action Points** at the end of a turn
"""
            }

        HoveredCriticalChance ->
            { title = "Critical Chance"
            , description = """The chance to cause a critical hit in combat is increased by this amount.

Influenced by:

- **Luck**
- the **Finesse** trait
- the **More Criticals** perk
- the **Sniper** perk
- the **Slayer** perk

During combat the critical chance is also influenced by:

- **attack type** (aimed, unaimed, burst shot)
- **chance to hit**
"""
            }

        HoveredDamageThreshold ->
            { title = "Damage Threshold"
            , description = """DT reduces incoming damage by a fixed amount.

This allows tough armor to immediately stop a bullet cold, no matter how many successful shots are fired.

Influenced by:

- your **armor**
"""
            }

        HoveredDamageResistance ->
            { title = "Damage Resistance"
            , description = """Any damage taken is reduced by this amount. Damage Resistance can be increased by wearing armor.

Influenced by:

- your **armor**
- the **Toughness** perk
- the attacker's **ammo**
"""
            }

        HoveredHealOverTime ->
            { title = "Heal over time"
            , description = """Your character heals a small amount **automatically on every tick** (in most worlds this happens every hour on the hour).

Influenced by:

- the **First Aid** skill
- the **Faster Healing** perk
"""
            }

        HoveredHealUsingTick ->
            { title = "Heal using tick"
            , description = """You can heal by **consuming a tick** from the left menu.

Influenced by:

- the **Doctor** skill
- the **Faster Healing** perk
"""
            }


requirementText : PerkRequirement.Requirement -> String
requirementText req =
    case req of
        PerkRequirement.ROneOf reqs ->
            "One of:\n"
                ++ (List.map requirementText reqs
                        |> List.map (\req_ -> "  - " ++ req_)
                        |> String.join "\n"
                   )

        PerkRequirement.RLevel lvl ->
            "Level " ++ String.fromInt lvl

        PerkRequirement.RSpecial special n ->
            Special.label special ++ " " ++ String.fromInt n

        PerkRequirement.RSpecialLT special n ->
            Special.label special ++ " < " ++ String.fromInt n

        PerkRequirement.RSkill skill n ->
            Skill.name skill ++ ": " ++ String.fromInt n ++ "%"

        PerkRequirement.RQuest quest ->
            "Quest: " ++ Quest.title quest
